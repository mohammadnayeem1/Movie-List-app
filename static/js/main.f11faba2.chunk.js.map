{"version":3,"sources":["components/Bar.js","components/Info.js","movData.js","components/Form.js","App.js","index.js","pictures/film.png"],"names":["Bar","react_default","a","createElement","className","src","film","Info","props","imageUrl","alt","title","year","director","actors","description","href","IMDbUrl","name","onClick","handleDelete","movData","key","Form","onSubmit","handleSubmit","type","placeholder","onChange","handleChange","value","pattern","maxlength","size","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","listOfMovies","setListofMovies","_React$useState3","_React$useState4","setCount","_React$useState5","_React$useState6","formData","setFormData","_React$useState7","_React$useState8","movie","setMovie","url","concat","replace","useEffect","infoElement","Array","from","Set","map","movies","find","item","assign","event","target","newList","filter","_event$target","objectSpread","defineProperty","preventDefault","fetch","then","res","json","data","Title","length","Year","Director","imdbID","Plot","Poster","Actors","passMovie","alert","count","ReactDOM","render","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f11faba2.chunk.js","sourcesContent":["import React from 'react'\nimport film from '../pictures/film.png'\n\nexport default function Bar(){\n    return(\n        <nav className=\"bar\">\n                <img src={film} className=\"icon\" />\n                <h3> Movies to Watch </h3>\n        </nav>\n    )\n}","import React from 'react'\n\nexport default function Info(props){\n    \n    \n    return(\n        <div className=\"info\">\n            <img src={props.imageUrl} className=\"movieImage\" alt=\"Picture not found\"/>\n            <div className = \"movieInfo\">\n                <h1 className=\"Title\"> {props.title} </h1>\n                <h3 className=\"Year\"> Release year: {props.year} </h3>\n                <div>\n                    <h3 className=\"Director\"> Directed by: {props.director} </h3>\n                    <h3 className=\"Actors\"> Starring: {props.actors}</h3>\n                    <p className=\"Description\"> {props.description} </p>\n                    <a href={props.IMDbUrl}> Click Here for more Info </a>\n                    <button className='delete' name={props.title} onClick={props.handleDelete}> Delete </button>\n                </div>\n            </div>\n        </div>\n    )\n}","export default [\n    {\n        key: 1,\n        title: \"The Dark Knight\",\n        year: 2008,\n        director: \"Christopher Nolan\",\n        IMDbUrl: \"https://www.imdb.com/title/tt0468569/\",\n        description: \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.\",\n        imageUrl: \"https://m.media-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_.jpg\",\n        actors: \"Christian Bale, Heath Ledger, Aaron Eckhart\"\n    },\n    {\n        key: 2,\n        title: \"The Shawshank Redemption\",\n        year: 1994,\n        director: \"Frank Darabont\",\n        IMDbUrl: \"https://www.imdb.com/title/tt0111161/\",\n        description: \"Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.\",\n        imageUrl: \"https://m.media-amazon.com/images/M/MV5BMDFkYTc0MGEtZmNhMC00ZDIzLWFmNTEtODM1ZmRlYWMwMWFmXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_FMjpg_UX1000_.jpg\",\n        actors: \"Tim Robbins, Morgan Freeman, Bob Gunton\"\n    },\n    {\n        key: 3,\n        title: \"Se7en\",\n        year: 1995,\n        director: \"David Fincher\",\n        IMDbUrl: \"https://www.imdb.com/title/tt0114369/\",\n        description: \"Two detectives, a rookie and a veteran, hunt a serial killer who uses the seven deadly sins as his motives.\",\n        imageUrl: \"https://m.media-amazon.com/images/M/MV5BOTUwODM5MTctZjczMi00OTk4LTg3NWUtNmVhMTAzNTNjYjcyXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_.jpg\",\n        actors: \"Morgan Freeman, Brad Pitt, Kevin Spacey\"\n    },\n    {\n        key: 4,\n        title: \"Good Will Hunting\",\n        year: 1997,\n        director: \"Gus Van Sant\",\n        IMDbUrl: \"https://www.imdb.com/title/tt0119217/\",\n        description: \"Will Hunting, a janitor at M.I.T., has a gift for mathematics, but needs help from a psychologist to find direction in his life.\",\n        imageUrl: \"https://m.media-amazon.com/images/M/MV5BOTI0MzcxMTYtZDVkMy00NjY1LTgyMTYtZmUxN2M3NmQ2NWJhXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_FMjpg_UX1000_.jpg\",\n        actors: \"Robin Williams, Matt Damon, Ben Affleck\"\n    }\n]","import React from 'react'\n\nexport default function Form(props){\n\n    return (\n        <form className=\"form\" onSubmit={props.handleSubmit}>\n            <input type=\"text\" placeholder=\"Title\" name=\"title\" onChange={props.handleChange} value={props.title} className=\"formTitle\"/>\n            <input type=\"text\" placeholder=\"Year(optional)\" pattern=\"[0-9]*\" maxlength=\"4\" size=\"13\" name=\"year\" onChange={props.handleChange} value={props.year}/>\n            <button className=\"btn\"> Submit </button>\n        </form>\n    )\n}","import React, { useEffect } from \"react\"\nimport Bar from \"./components/Bar\"\nimport Info from \"./components/Info\"\nimport movData from \"./movData\"\nimport Form from \"./components/Form\"\nimport \"./style.css\"\n\nexport default function App(){\n    \n    \n    const [listOfMovies, setListofMovies] = React.useState(movData);\n    \n    const [count, setCount] = React.useState(0)\n\n    const [formData,setFormData] = React.useState(\n        {\n            title: \"\",\n            year: \"\"\n        }\n    )\n    const [movie, setMovie] = React.useState({})\n    \n\n    function handleChange(event) {\n        const {name, value} = event.target\n        setFormData({...formData,\n            [name]: value,\n        })\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        fetchData()\n        movie.title && setCount((count) => count+1)\n\n    }\n      \n\n\n    const url =`https://www.omdbapi.com/?t=${formData.title.replace(/ /g, \"+\")}&y=${formData.year}&plot=full&apikey=399f76ff`\n    \n\n    function passMovie(data){\n        setMovie({\n            key: listOfMovies.length,\n            title: data.Title,\n            year: data.Year,\n            director: data.Director,\n            IMDbUrl: `https://www.imdb.com/title/${data.imdbID}/`,\n            description: data.Plot,\n            imageUrl: data.Poster,\n            actors: data.Actors\n        })\n    }\n    \n\n    function fetchData(){\n        fetch(url)\n        .then(res => res.json())\n        .then(data => data.Title ? passMovie(data) : alert(\"Does not exist\"))\n\n    }    \n    \n    useEffect(() => {\n        setListofMovies(listOfMovies.concat(movie))\n    }, [movie])\n    \n  \n\n    const uniqueTitles = Array.from(new Set(listOfMovies.map(movies => movies.title)))\n    .map(title => {\n      return listOfMovies.find(movies => movies.title === title)\n    })\n    \n    \n    const infoElement = uniqueTitles.map(item => {\n        \n        if (item.title)\n        return(\n            <Info \n                key= {item.key}\n                handleDelete= {handleDelete}\n                {...item}\n                \n            />\n        )\n    })\n    \n\n    function handleDelete(event){\n        const title = event.target.name\n        const newList = listOfMovies.filter(item => item.title !== title);\n        setListofMovies(newList);\n    }\n    \n    return(\n        <div>\n            <Bar />\n            <Form handleChange={handleChange} value={formData} handleSubmit={handleSubmit}/>\n            <section className=\"movie-list\">\n            {infoElement}\n            </section>\n        </div>\n    )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))","module.exports = __webpack_public_path__ + \"static/media/film.289458c8.png\";"],"sourceRoot":""}